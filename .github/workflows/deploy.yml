name: Deploy to Hetzner

on:
  push:
    branches:
      - master  # Trigger the deployment when changes are pushed to the master branch
  workflow_dispatch:  # Allow manual trigger

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Step 2: Set up Docker Buildx for multi-platform support (optional)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Step 4: Build and push Docker image to Docker Hub
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/wishlist:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/wishlist:latest
      
      # Step 5: SSH into Hetzner, pull the image, and run the container with environment variables
      - name: Deploy to Hetzner
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HETZNER_IP }}
          username: ${{ secrets.HETZNER_USER }}
          password: ${{ secrets.HETZNER_PASSWORD }}
          port: 22
          script: |
            # Pull the latest image from Docker Hub (private repo)
            docker pull ${{ secrets.DOCKER_USERNAME }}/wishlist:latest
            
            # Stop and remove any running container (if exists)
            docker stop wishlist || true
            docker rm wishlist || true
            
            # Ensure the environment variable does not contain special characters that could break the command
            echo "CONNECTION_STRING=${{ secrets.CONNECTION_STRING }}"

            # Run the container with environment variables passed directly from GitHub Secrets
            docker run -d --name wishlist \
              -e CONNECTION_STRING="${{ secrets.CONNECTION_STRING }}" \
              -p 8080:8080 \
              ${{ secrets.DOCKER_USERNAME }}/wishlist:latest
